version: v1
metadata:
  name: Line Loop Animation 2D Canvas v2
  description: ""
  author: Unknown
  source: https://codepen.io/jackrugile/pen/rNvPvod
parameters:
  - id: color
    default: "#000000"
helpers:
  insert_baseurl: true
template: >
  <!DOCTYPE html>

  <html lang="en" >

  <head>
    <meta charset="UTF-8">
    <title>CodePen - Line Loop Animation 2D Canvas v2</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css">
  <style>html,

  body {
    align-items: center;
    background-color: #111;
    display: flex;
    height: 100%;
    justify-content: center;
  }</style>


  </head>

  <body>


  <canvas></canvas>

    <script  src="./script.js"></script><script>const canvas = document.querySelector('canvas');
  const ctx = canvas.getContext('2d');

  const width = 400;

  const height = 300;

  const lineCount = 8;

  const gap = height / (lineCount - 1);

  let outside = width * 0.2;


  // uncomment this to see what's happening outside of the canvas

  //outside = width * -0.2;


  canvas.width = width;

  canvas.height = height;

  ctx.fillStyle = '#000';

  ctx.lineCap = 'square';


  function loop() {
    ctx.fillRect(0, 0, width, height);

    // this offset value with time increasing
    // and taking the modulus result of that time % gap
    // gives us a repeating gap over time
    // so each line just jumps back to it's previous position
    // giving the illusion of an endless repeat
    const offset = Date.now() * -0.04 % gap;

    for (let i = 0; i < lineCount; i++) {
      const y = i * gap + offset;
      const progress = 1 - y / height;
      const lineWidth = 1 + progress * 6;

      ctx.beginPath();
      // top right
      ctx.moveTo(-outside, -outside);
      ctx.lineTo(width, y);
      // bottom left
      ctx.moveTo(width + outside, height + outside);
      ctx.lineTo(0, height - y);
      ctx.lineWidth = lineWidth;
      ctx.strokeStyle = `hsla(260, 70%, 60%, ${progress})`;
      // some blur
      ctx.shadowBlur = lineWidth * 2;
      ctx.shadowColor = `hsla(260, 100%, 60%, ${progress})`;
      ctx.stroke();
    }

    window.requestAnimationFrame(loop);
  }


  loop();</script>


  </body>

  </html>
